apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: "net.saliman.cobertura"
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'signing'

def environment = hasProperty('env') ? env : 'labs-jenkins'
println "Environment is set to $environment"

sourceCompatibility = 1.6
targetCompatibility = 1.6

buildscript {
    repositories {
        maven { url "http://jcenter.bintray.com" }
    }

    dependencies {
        classpath files('libs/gradle-cobertura-plugin-2.3.2.jar')
        classpath files('libs/build-info-extractor-gradle-4.3.0-uber.jar')
    }
}

repositories {

    //arizzini: wait of time, bamboo outbound connections are blocked.
    maven {
        url 'https://globalrepository.mclocal.int/artifactory/central'
    }

    maven {
        url "https://globalrepository.mclocal.int/artifactory/public"
    }

    maven {
        url "https://globalrepository.mclocal.int/artifactory/public-snapshots"
    }

    maven {
        url "https://globalrepository.mclocal.int/artifactory/snapshots/"
    }

    maven {
        url "https://globalrepository.mclocal.int/artifactory/releases/"
    }


    maven {
        url 'http://labs.mastercard.com/artifactory/repo'
    }


    maven {
        url 'http://labs.mastercard.com/artifactory/repo'

    }

    maven {
        url 'http://labs.mastercard.com/artifactory/local-repos'
    }

    maven { url "http://jcenter.bintray.com" }

}

ext {
    signpostVersion = '1.2.1.2'
    jsonSimpleVersion = '1.1.1'
    httpClientVersion = '4.5.2'
    commonsCodecVersion = '1.10'
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.4'
    testCompile group: 'org.spockframework', name: 'spock-core', version: '1.0-groovy-2.4'
    testRuntime 'cglib:cglib-nodep:3.2.0'
    testRuntime 'org.objenesis:objenesis:2.2'
    testRuntime 'org.hamcrest:hamcrest-core:1.3'
    testRuntime "org.slf4j:slf4j-log4j12:1.7.21"
    testRuntime "log4j:log4j:1.2.17"

    compile group: 'oauth.signpost', name: 'signpost-core', version: signpostVersion
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: httpClientVersion
    compile group: 'commons-codec', name: 'commons-codec', version: commonsCodecVersion
    compile("com.googlecode.json-simple:json-simple:$rootProject.ext.jsonSimpleVersion") {
        exclude group: 'junit', module: 'junit'
    }
}

test {
    filter {
        includeTestsMatching "*Spec"
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Mastercard SDK Core',
                   'Implementation-Version': version
    }
}


cobertura {
    coverageFormats = ['html', 'xml']
    coverageIgnoreTrivial = true
    coverageIgnores = ['org.slf4j.Logger.*']
    coverageReportDir = new File("$buildDir/reports/cobertura")
}

test.finalizedBy(project.tasks.cobertura)


// Maven-Publishing+Artifactory.
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact (javadocJar) {
                classifier = 'javadoc'
            }
            artifact (sourcesJar) {
                classifier = 'sources'
            }
            pom.withXml {
                asNode().dependencies.'*'.findAll() {
                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                        dep.name == it.artifactId.text()
                    }
                }.each() {
                    it.scope*.value = 'compile'
                }
            }
        }
    }
}

artifactory {

    if (environment == "mc-jenkins") {
        println "Publishing to MC Artifactory"

        contextUrl = 'https://globalrepository.mclocal.int/artifactory/'

        publish {
            repository {
                repoKey = version.contains('SNAPSHOT') ? 'snapshots' : 'releases'
                username = "${mc_artifactory_user}"
                password = "${mc_artifactory_password}"
            }
            defaults {
                publications('mavenJava')
                publishArtifacts = true
                publishPom = true
            }
        }
    } else {
        println "Publishing to Labs Artifactory"
        contextUrl = 'http://tools.labs.mastercard.com/artifactory/'

        publish {
            repository {
                repoKey = version.contains('SNAPSHOT') ? 'libs-snapshot-local' : 'libs-release-local'
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
            defaults {
                publications('mavenJava')
                publishArtifacts = true
                publishPom = true
            }
        }
    }

    resolve {
        repoKey = 'jcenter'
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'MasterCard Java SDK Core'
                packaging 'jar'
                description 'Java Core SDK for use with SDKs availabe on MasterCard Developer Zone (https://developer.mastercard.com)'
                url 'https://developer.mastercard.com'

                scm {
                    connection 'scm:git:git://github.com/MasterCard/mastercard-java-sdk-core.git'
                    developerConnection 'scm:git:git@github.com:MasterCard/mastercard-java-sdk-core.git'
                    url 'https://github.com/MasterCard/mastercard-java-sdk-core'
                }

                licenses {
                    license {
                        name 'BSD-2 License'
                    }
                }

                developers {
                    developer {
                        email 'APISupport@mastercard.com'
                    }
                }
            }
        }
    }
}

